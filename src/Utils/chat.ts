import type FishPi from 'fishpi'
import type { ChatMsg } from './type'
import { GlobalRuleList } from './rule'

export const ChatCallBack = async function (fish: FishPi, data: ChatMsg, IceNet?: any) {
  let uname = data.user;
  if (data.detail && data.detail.intimacy < 100) {
    uname = data.user;
  } else if (data.detail && data.detail.intimacy < 500) {
    uname = data.detail ? (data.detail.gender == '1' ? 'Âì•Âì•' : 'ÂßêÂßê') : data.user
  } else {
    uname = data.detail ? (data.detail.nick_name ? data.detail.nick_name : (data.detail.gender == '1' ? 'Âì•Âì•' : 'ÂßêÂßê')) : data.user
  }
  switch (data.type) {
    case 0:
      // ÊôÆÈÄöÊ∂àÊÅØÂ§ÑÁêÜ
      for (let r of GlobalRuleList) {
        if (r.rule.test(data.msg)) {
          IceNet.UDetail = data.detail;
          IceNet.UName = uname;
          let callback = await r.func(data.user, data.msg, fish, IceNet);
          if (callback) {
            IceNet.sendMsg(`@${data.user} \n ${uname} ${callback}`)
          }
          break;
        }
      }
      break;
    case 1:
      // ‰∏ìÂ±ûÁ∫¢ÂåÖÊ∂àÊÅØÂ§ÑÁêÜ
      IceNet.sendMsg(`@${data.user} Ë∞¢Ë∞¢${uname}ÈÄÅÁöÑÁ∫¢ÂåÖ:heartbeat:`);
      break
    case 2:
      // ÁßÅ‰ø°Ê∂àÊÅØÂ§ÑÁêÜ
      fish.chat.send(data.user, `ü•™Hi\nËøôÈáåÊòØÂ∞èÂÜ∞Êú∫Âô®‰∫∫!\nÁßÅËÅäÁöÑÊ∂àÊÅØÂ∞èÂÜ∞ÊöÇÊó∂‰∏çÂÅöÂ§ÑÁêÜÂì¶~\nÂ¶ÇÊúâ‰∫ãËØ∑ËÅîÁ≥ªÂ∞èÂÜ∞ÁÆ°ÁêÜÂëò:<a href="https://fishpi.cn/chat?toUser=Yui" target="_blank">Yui</a>`);
      break;
    case 3:
      // Âáå Á§ºÁâ©Â§ÑÁêÜ
      let gift = JSON.parse(data.msg);
      if (gift.giftNum <= 0) {
        IceNet.sendMsg(`@${data.user} Â∞èÊ∞îÈ¨º${uname},‰∏Ä‰∏™${gift.giftName}ÈÉΩ‰∏çÁªôÊàë,Â∞èÂÜ∞‰∫≤ÂØÜÂ∫¶${gift.intimacy}`);
      } else if (gift.giftNum <= 5) {
        IceNet.sendMsg(`@${data.user} Ë∞¢Ë∞¢Â∞èÊ∞îÈ¨º${uname}ÈÄÅÁöÑ${gift.giftNum}‰∏™${gift.giftName},Â∞èÂÜ∞‰∫≤ÂØÜÂ∫¶+${gift.intimacy}`);
      } else {
        IceNet.sendMsg(`@${data.user} Ë∞¢Ë∞¢${uname}ÈÄÅÁöÑ${gift.giftNum}‰∏™${gift.giftName}:heartbeat:Â∞èÂÜ∞‰∫≤ÂØÜÂ∫¶+${gift.intimacy}`);
      }
      break
    default:
      break;
  }
}